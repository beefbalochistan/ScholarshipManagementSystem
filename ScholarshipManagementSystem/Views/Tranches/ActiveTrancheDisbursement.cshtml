@model IEnumerable<DAL.Models.Domain.VirtualAccount.Tranche>

@{
    ViewBag.Title = "Tranche: Ready for Disbursement";
    ViewBag.pTitle = "Tranche: Ready for Disbursement";
    ViewBag.pageTitle = "Account";
    Layout = "~/Views/_Shared/_Layout.cshtml";
}

<style type="text/css">
    .btn-circle.btn-xl {
        width: 90px;
        height: 90px;
        padding: 10px 10px;
        border-radius: 60px;
        font-size: 14px;
        text-align: center;
    }
    l {
        margin: 0;
        padding: 0;
        display: flex;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
    }

    .ull li {
        list-style: none;
        margin: 0 20px;
    }

        .ull li a {
            position: relative;
            display: block;
            width: 60px;
            height: 60px;
            text-align: center;
            line-height: 63px;
            background: #50a5f1;
            border-radius: 50%;
            font-size: 30px;
            color: #1d971d;
            transition: .5s;
        }

            .ull li a::before {
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                border-radius: 50%;
                background: #ffee10;
                transition: .5s;
                transform: scale(.9);
                z-index: -1;
            }

            .ull li a:hover::before {
                transform: scale(1.1);
                box-shadow: 0 0 15px #ffee10;
            }

            .ull li a:hover {
                color: #ffee10;
                box-shadow: 0 0 5px #ffee10;
                text-shadow: 0 0 5px #ffee10;
            }
</style>
<link rel="stylesheet" type="text/css" href="~/assets/libs/toastr/build/toastr.min.css">
<link href="~/assets/libs/sweetalert2/sweetalert2.min.css" rel="stylesheet" type="text/css" />
<div class="row">
    @foreach (var item in Model)
    {

        <div class="col-md-3">
            @*<div class="mt-2">
                    <h5>Tranche</h5>
                </div>*@
            <div class="card">
                <div class="card-body">
                    <div class="product-img position-relative">
                        @*<div class="avatar-sm product-ribbon">
                <span class="avatar-title rounded-circle  bg-primary">
                    - 25 %
                </span>
            </div>*@

                        <a asp-controller="TrancheDocuments" asp-action="_Index" asp-route-id="@item.TrancheId" class="text-dark">
                            <img src="@item.PaymentMethod.Logo" style="height:80px" alt="" class="img-fluid mx-auto d-block">
                        </a>
                    </div>
                    <div class="text-center">
                        <h5 class="mb-1 text-truncate"><b style="color:brown">@item.Name</b></h5>
                        <ul class="ull m-0">
                            <li>
                                @{
                                    if (item.IsDisbursementInProcess)
                                    {
                                        <a onclick="notificationme('Tranche Is already in process!')" style="cursor:not-allowed;background-color:orange" data-toggle="tooltip" data-placement="top" title="Disbursement already in process" data-original-title="Track">
                                            <i class="fab fa-chrome"></i>
                                        </a>
                                    }
                                    else
                                    {
                                        <a asp-controller="Applicants" asp-action="GetApplicantListInTrancheForDisbursement" asp-route-id="@item.TrancheId" data-toggle="tooltip" data-placement="top" title="Click to Disburse" data-original-title="Track">
                                            <i class="fab fa-chrome"></i>
                                        </a>
                                    }
                                }
                            </li>
                        </ul>
                        @*<button data-toggle="tooltip" data-placement="top" title="Click to Disburse" data-original-title="Track" class="btn btn-success btn-circle btn-xl">Disburse</button>*@
                        <div>
                            @*<button type="button" data-toggle="modal" data-target="#myModal" onclick="createModal('@item.TrancheId')" class="btn btn-info btn-sm waves-effect btn-label waves-light"><i class="bx bxs-file label-icon"></i> View</button>*@
                            <span id="shower" style="color:#50a5f1;cursor:pointer;" data-toggle="modal" data-src="@item.ApprovedAttachment" data-target="#attachmentModal">
                                <i class="mdi mdi-attachment align-middle pl-1" style="font-size:21px"></i> Approved Letter
                            </span>
                        </div>
                    </div>
                    <ul class="list-inline mb-0">
                        <li class="list-inline-item mr-3">
                            <span class="badge badge-secondary">Approve On</span>
                        </li>
                        <li class="list-inline-item mr-3 float-right" data-toggle="tooltip" data-placement="top" title="" data-original-title="Approved">
                            @*<i class="bx bx-calendar mr-1"></i> *@<span class="badge badge-pill badge-soft-info font-size-12">@item.ApprovedOn.ToString("dd-MM-yyyy")</span>
                        </li>
                    </ul>
                    <ul class="list-inline mb-0">
                        <li class="list-inline-item mr-3">
                            <span class="badge badge-info">Total Amount</span>
                        </li>
                        <li class="list-inline-item mr-3 float-right" data-toggle="tooltip" data-placement="top" title="" data-original-title="Approved">
                            <i class="bx bx-list-check mr-1"></i> <span class="badge badge-pill badge-soft-info font-size-12">@item.ApprovedAmount</span>
                        </li>
                    </ul>
                    <ul class="list-inline mb-0">
                        <li class="list-inline-item mr-3">
                            <span class="badge badge-success">Disbursed</span>
                        </li>
                        <li class="list-inline-item mr-3 float-right" data-toggle="tooltip" data-placement="top" title="" data-original-title="Disbursed">
                            <i class="bx bx-transfer mr-1"></i> <span class="badge badge-pill badge-soft-success font-size-12">@item.DisbursedAmount</span>
                        </li>
                    </ul>
                    <ul class="list-inline mb-0">
                        <li class="list-inline-item mr-3">
                            <span class="badge badge-warning">Remaining</span>
                        </li>
                        <li class="list-inline-item mr-3 float-right" data-toggle="tooltip" data-placement="top" title="" data-original-title="Commit">
                            <i class="bx bx-lock mr-1"></i> <span class="badge badge-pill badge-soft-warning font-size-12">@(item.ApprovedAmount - item.DisbursedAmount)</span>
                        </li>
                    </ul>
                    <ul class="list-inline mb-0">
                        <li class="list-inline-item mr-3">
                            <span class="badge badge-soft-success">Total Applicant</span>
                        </li>
                        <li class="list-inline-item mr-3 float-right" data-toggle="tooltip" data-placement="top" title="" data-original-title="Commit">
                            <i class="bx bxs-graduation mr-1"></i> <span class="badge badge-pill badge-soft-warning font-size-12">@(item.ApplicantCount)</span>
                        </li>
                    </ul>
                    <button id=@("btnView" + item.TrancheId) type="button" data-toggle="modal" data-target="#myModal" onclick="createModal('@item.TrancheId')" class="btn btn-info btn-sm waves-effect btn-label waves-light"><i class="bx bxs-file label-icon"></i>List</button>
                </div>
            </div>
        </div>
    }
</div>



<div id="myModal" class="modal fade" role="dialog">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                <div id="rendercontent">
                </div>
            </div>
        </div>
    </div>
</div>
<div id="attachmentModal" class="modal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">           
            <div class="modal-body pb-0">
                <embed id="pdfFileAttachment" src="" frameborder="0" width="100%" height="550px">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
<!-- end row -->
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <!-- Sweet Alerts js -->
    <script src="~/assets/libs/sweetalert2/sweetalert2.min.js"></script>
    <script src="~/assets/libs/toastr/build/toastr.min.js"></script>
    <!-- bs custom file input plugin -->
    <script src="~/assets/libs/bs-custom-file-input/bs-custom-file-input.min.js"></script>
    <script src="~/assets/js/pages/form-element.init.js"></script>
    <script>
        $(document).ready(function () {
            $("#myInput").change(function () {
                alert("A file has been selected.");
            });
            $("#shower").click(function () {
                $('#pdfFileAttachment').attr("src", $(this).attr("data-src"));
            });
        });
    </script>
    <script>
        function OnOffTranche(TrancheId) {
            //alert(TrancheId)
            var switchONOFF = $("#switchONOFF" + TrancheId);
            var IsChecked = switchONOFF[0].checked;
            var message = "";
            if (IsChecked) {
                message = "Tranche Active Successfully!";
            } else {
                message = "Tranche De-Active Successfully!";
            }

            $.ajax({
                type: "POST",
                url: "/Tranches/OnOffTranche",
                data: { trancheId: TrancheId, IsChecked: IsChecked },
                dataType: "json",
                success: function (response) {
                    if (response.isValid) {
                        Swal.fire({
                            title: "Done!",
                            text: message,
                            type: "success",
                            showCancelButton: 0,
                            confirmButtonColor: "#34c38f"
                        });
                    } else {
                        Swal.fire({
                            title: "Failed",
                            text: "Something Went Wrong!",
                            type: "warning",
                            showCancelButton: 0,
                            confirmButtonColor: "#556ee6"
                        });
                    }
                },
                failure: function (response) {
                    alert(response.responseText);
                },
                error: function (response) {
                    alert(response.responseText);
                }
            });
        }
        function reqForApp(TrancheId) {
            //alert(TrancheId)
            var switchONOFF = $("#switchONOFF" + TrancheId);
            var IsChecked = switchONOFF[0].checked;
            //alert(IsChecked)
            if (IsChecked) {
                switchONOFF.prop('checked', false);
                switchONOFF.attr('disabled', true);
            } else {
                switchONOFF.attr('disabled', false);
            }
            var message = "";
            if (IsChecked) {
                message = "Tranche: Request for Approval is In Process!";
            } else {
                message = "Tranche: Request for Approval Withdraw!";
            }

            $.ajax({
                type: "POST",
                url: "/Tranches/RequestForApprovalTranche",
                data: { trancheId: TrancheId, IsChecked: IsChecked },
                dataType: "json",
                success: function (response) {
                    if (response.isValid) {
                        Swal.fire({
                            title: "Done!",
                            text: message,
                            type: "success",
                            showCancelButton: 0,
                            confirmButtonColor: "#34c38f"
                        });
                    } else {
                        Swal.fire({
                            title: "Failed",
                            text: "Something Went Wrong!",
                            type: "warning",
                            showCancelButton: 0,
                            confirmButtonColor: "#556ee6"
                        });
                    }
                },
                failure: function (response) {
                    alert(response.responseText);
                },
                error: function (response) {
                    alert(response.responseText);
                }
            });
        }
        function createModal(trancheId) {
            debugger;
            $(".loading").show();
            $.ajax({
                url: '@Url.Action("ApplicantInTranche", "Applicants")',
                data: {
                    trancheId: trancheId
                },
                success: function (data) {
                    $("#rendercontent").html(data);
                    $(".loading").hide();
                }
            });
        }
        function TrancheApprovedRequest(trancheId) {
            Swal.fire({
                title: "Please Attach Tranche Approval Document",
                html: "<div class='col-md-6'><input data-toggle ='tooltip' data-placement='top' title='Attach File' type='file' name='scannedcopy' id='scannedcopy' required></div>",
                showCancelButton: !0,
                confirmButtonText: "Submit",
                //showLoaderOnConfirm: !0,
                confirmButtonColor: "#556ee6",
                cancelButtonColor: "#f46a6a",
                preConfirm: () => {
                    if (document.getElementById('scannedcopy').files.length == 0) {
                        Swal.showValidationMessage(
                            `Please Attach Document`
                        )
                    }
                }
            }).then(function (t) {
                if (t.value) {
                    //var text = document.getElementById('scannedcopy').value;
                    var data = new FormData();
                    var files = $("#scannedcopy").get(0).files;
                    if (files.length > 0) {
                        data.append("Attachment", files[0]);
                    }
                    data.append("TrancheId", trancheId);
                    $.ajax({
                        type: "POST",
                        url: "/Tranches/TrancheApprovedRequest",
                        type: "POST",
                        processData: false,
                        contentType: false,
                        data: data,
                        success: function (response) {
                            if (response != null) {
                                if (response.isValid) {
                                    t.value && Swal.fire("Back", response.message, "success");
                                    setTimeout(function () {
                                        location.reload();
                                    }, 3000);
                                } else {
                                    notificationme(response.message);
                                }
                            }
                        },
                        failure: function (response) {
                            alert(response.responseText);
                        },
                        error: function (response) {
                            alert(response.responseText);
                        }
                    });
                    Swal.fire({
                        type: "success",
                        title: "Ajax request finished!",
                        html: "Submitted email: " + t
                    })
                } @*else {
                    notificationme();
                } *@
            })
        }
        function notificationme(message) {
            toastr.options = {
                "closeButton": false,
                "debug": false,
                "newestOnTop": false,
                "progressBar": true,
                "preventDuplicates": true,
                "onclick": null,
                "showDuration": "100",
                "positionClass": "toast-bottom-right",
                "hideDuration": "1000",
                "timeOut": "5000",
                "extendedTimeOut": "1000",
                "showEasing": "swing",
                "hideEasing": "linear",
                "showMethod": "show",
                "hideMethod": "hide"
            };
            toastr.info(message);
        }
    </script>
}