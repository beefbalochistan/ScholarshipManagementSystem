@model IEnumerable<DAL.Models.ViewModels.PolicyView>

@{
    ViewData["Title"] = "ViewPolicy";
    Layout = "~/Views/_Shared/_Layout.cshtml";
}
<style>
    table {
        border-collapse: collapse;
    }

    td,
    th {
        padding: 10px;
        border-bottom: 2px solid #8ebf42;
        text-align: center;
    }
    .container-fluid{
        padding-left:0;
        padding-right:0;
    }
    .page-title-box{
        padding:0;
    }
</style>

<div class="table-responsive">
    <div class="card">
        <div class="card-body">
            <h4 class="card-title" style="font-size:16px">Summary of Annual Scholarship Policy &amp; Plan FY: @ViewBag.FY</h4>
            @*<p class="card-title-desc">Extend the default collapse behavior to create an accordion.</p>*@
            <div id="accordion">
                <table class="table table-condensed" id="myTable" style=" border-spacing: 0; width: 100%;">
                   
                    <tbody class="panel">
                        @{
                            int counter = 1; bool showheader = true; int innercounter = 1; int lastQualificationId = Model.ElementAt(0).QualificationLevelId;
                            string lastQualificationLevelName = Model.ElementAt(0).QualificationLevel;
                            double POMS = 0, DOMS = 0, SQSOMS = 0, SQSEVIs = 0, AdditionalSlot = 0, totalSlot = 0, totalAmount = 0;
                            @foreach (var item in Model)
                            {
                                @if (lastQualificationId != item.QualificationLevelId)
                                {
                                    showheader = true;
                                    lastQualificationId = item.QualificationLevelId;
                                    lastQualificationLevelName = item.QualificationLevel;
                                }
                                @if (lastQualificationId == item.QualificationLevelId && showheader)
                                {
                                    <tr style="background-color:mediumseagreen;color:white;">                                        
                                        <th>
                                            @Html.DisplayNameFor(model => model.Scheme)
                                        </th>
                                        <th>
                                            @Html.DisplayNameFor(model => model.SchemeLevel)
                                        </th>
                                        <th>
                                            Monthly Stipend
                                        </th>
                                        <th>Payable Months</th>
                                        <th>
                                            @Html.DisplayNameFor(model => model.Amount)
                                        </th>
                                        <th>
                                            @Html.DisplayNameFor(model => model.POMS)
                                        </th>
                                        <th>
                                            @Html.DisplayNameFor(model => model.DOMS)
                                        </th>
                                        <th>
                                            @Html.DisplayNameFor(model => model.SQSOMS)
                                        </th>
                                        <th>
                                            @Html.DisplayNameFor(model => model.SQSEVIs)
                                        </th>
                                        <th>
                                            Additional Slot
                                        </th>
                                        <th>
                                            Total Slot
                                        </th>
                                        <th>Total Budget(M)</th>
                                    </tr>
                                    showheader = false;
                                    <tr style="font-family: Verdana, Geneva, Tahoma, sans-serif; font-size: 14px">                                        
                                        <th style="text-align:left;min-width:180px;background-color:gainsboro">@item.SchemeId. @lastQualificationLevelName</th>
                                        <th>S-TOTAL</th>
                                        <th>@(Model.Where(a=>a.QualificationLevelId == lastQualificationId).Sum(a=>a.Amount)/12)</th>
                                        <th>@(12*(Model.Count(a => a.QualificationLevelId == lastQualificationId)))</th>
                                        <th>@(Model.Where(a=>a.QualificationLevelId == lastQualificationId).Sum(a=>a.Amount))</th>
                                        <th>
                                            @{ POMS = Model.Where(a => a.QualificationLevelId == lastQualificationId).Sum(a => a.POMS);}
                                            @(Math.Round(POMS,2))
                                        </th>
                                        <th>
                                            @{ DOMS = Model.Where(a => a.QualificationLevelId == lastQualificationId).Sum(a => a.DOMS);}
                                            @(Math.Round(DOMS,2))
                                        </th>
                                        <th>
                                            @{ SQSOMS = Model.Where(a => a.QualificationLevelId == lastQualificationId).Sum(a => a.SQSOMS);}
                                            @(Math.Round(SQSOMS,2))
                                        </th>
                                        <th>
                                            @{ SQSEVIs = Model.Where(a => a.QualificationLevelId == lastQualificationId).Sum(a => a.SQSEVIs);}
                                            @(Math.Round(SQSEVIs))
                                        </th>
                                        <th>
                                            @{
                                                if (lastQualificationId == 1)
                                                {
                                                    AdditionalSlot = Model.Where(a => a.QualificationLevelId == 1).Sum(a => a.DistrictAdditionalSlot);
                                                }
                                                else if (lastQualificationId == 2)
                                                {
                                                    AdditionalSlot = Model.Where(a => a.QualificationLevelId == 2).Sum(a => a.DistrictAdditionalSlot);
                                                }
                                                else if (lastQualificationId == 3)
                                                {
                                                    AdditionalSlot = Model.Where(a => a.QualificationLevelId == 3).Sum(a => a.DAEAdditionalSlot);
                                                }
                                                else if (lastQualificationId == 4)
                                                {
                                                    AdditionalSlot = Model.Where(a => a.QualificationLevelId == 4).Sum(a => a.DistrictAdditionalSlot);
                                                }
                                            }
                                            @(Math.Round(AdditionalSlot,2))
                                        </th>
                                        <th>
                                            @{ totalSlot = AdditionalSlot + POMS + DOMS + SQSOMS + SQSEVIs;}
                                            @(Math.Round((totalSlot)))
                                        </th>
                                        <th>@(Math.Round((Convert.ToDouble(Model.Where(a => a.QualificationLevelId == lastQualificationId).Max(a => a.Amount)) * totalSlot)/1000000f,2))</th>
                                    </tr>
                                    
                                }

                                <tr data-toggle="collapse" data-target=@("#demo"+counter) data-parent="#myTable" style="cursor:pointer;background-color:lightskyblue">
                                    <td>
                                        @*@Html.DisplayFor(modelItem => item.QualificationLevel)*@
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.SchemeLevel)
                                    </td>
                                    <td>
                                        @(item.Amount/12)
                                    </td>
                                    <td>
                                        12
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Amount)
                                    </td>
                                    <td>
                                        @(Math.Round(item.POMS,2))
                                    </td>
                                    <td>
                                        @(Math.Round(item.DOMS,2))
                                    </td>
                                    <td>
                                        @(Math.Round(item.SQSOMS,2))
                                    </td>
                                    <td>
                                        @(Math.Round(item.SQSEVIs,2))
                                    </td>
                                    <td>
                                        @(Math.Round(item.DistrictAdditionalSlot,2))
                                    </td>
                                    <td>
                                        @{ double totalslot = (Convert.ToDouble(item.POMS) + Convert.ToDouble(item.DOMS) + Convert.ToDouble(item.SQSOMS) + Convert.ToDouble(item.SQSEVIs) + item.DistrictAdditionalSlot);}
                                        @(Math.Round(totalslot, 2))
                                    </td>
                                    <td>@(Math.Round((Convert.ToDouble(item.Amount) * totalslot)/1000000f,2))</td>
                                </tr>
                                <tr id=@("demo"+counter) class="collapse">
                                    <td colspan="12" class="hiddenRow">
                                        @if (item.QualificationLevelId <= 2 || item.SchemeLevelId == 9 || item.QualificationLevelId == 4)
                                        {
                                            <table class="table table-condensed" style=" border-spacing: 0; width: 100%;">
                                                <thead>
                                                    <tr style="background-color:lightgray">
                                                        <th>
                                                            @Html.DisplayNameFor(model => model.DistrictPolicyDetailViewList.ElementAt(0).District)
                                                        </th>
                                                        <th>
                                                            @Html.DisplayNameFor(model => model.DistrictPolicyDetailViewList.ElementAt(0).CurrentYearPopulation)
                                                        </th>
                                                        <th>
                                                            @Html.DisplayNameFor(model => model.DistrictPolicyDetailViewList.ElementAt(0).MPI)
                                                        </th>
                                                        <th>
                                                            @Html.DisplayNameFor(model => model.DistrictPolicyDetailViewList.ElementAt(0).MPIDifferenceFromStatndard)
                                                        </th>
                                                        <th>
                                                            @Html.DisplayNameFor(model => model.DistrictPolicyDetailViewList.ElementAt(0).DistrictPopulationSlot)
                                                        </th>
                                                        <th>
                                                            @Html.DisplayNameFor(model => model.DistrictPolicyDetailViewList.ElementAt(0).DistrictMPISlot)
                                                        </th>
                                                        <th>
                                                            @Html.DisplayNameFor(model => model.DistrictPolicyDetailViewList.ElementAt(0).DistrictAdditionalSlot)
                                                        </th>
                                                        @{
                                                            if (!ViewBag.IsEndorse)
                                                            {
                                                                <th>
                                                                    Action
                                                                </th>
                                                            }
                                                        }
                                                    </tr>
                                                </thead>
                                                <tbody class="panel">
                                                    @foreach (var itemdistrict in item.DistrictPolicyDetailViewList.Where(a => a.SchemeLevelPolicyId == item.SchemeLevelPolicyId).OrderBy(a => a.District.Name))
                                                    {
                                                        <tr>
                                                            <td style="text-align: left">
                                                                @Html.DisplayFor(modelItem => itemdistrict.District.Name)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => itemdistrict.CurrentYearPopulation)
                                                            </td>
                                                            <td>
                                                                @(Math.Round(itemdistrict.MPI,3))
                                                            </td>
                                                            <td>
                                                                @(Math.Round(itemdistrict.MPIDifferenceFromStatndard,3))
                                                            </td>
                                                            <td>
                                                                @(Math.Round(itemdistrict.DistrictPopulationSlot,2))
                                                            </td>
                                                            <td>
                                                                @(Math.Round(itemdistrict.DistrictMPISlot,3))
                                                            </td>
                                                            <td>
                                                                @(Math.Round(itemdistrict.DistrictAdditionalSlot,3))
                                                            </td>
                                                            @{ 
                                                                if (!ViewBag.IsEndorse)
                                                                {
                                                                    <td>
                                                                        <button type="button" onclick="getDistrictId(@itemdistrict.DistrictQoutaBySchemeLevelId, @itemdistrict.DistrictAdditionalSlot, '@itemdistrict.District.Name')" class="btn-sm btn-info waves-effect waves-light" data-toggle="modal" data-target="#ModalDistrictPolicy">Update</button>
                                                                    </td>
                                                                }
                                                            }                                                            
                                                        </tr>
                                                    }
                                                </tbody>
                                            </table>
                                        }
                                        else if (item.QualificationLevelId == 3)
                                        {
                                            <table class="table table-condensed" style=" border-spacing: 0; width: 100%;">
                                                <thead>
                                                    <tr style="background-color:lightgray">
                                                        <th>
                                                            @Html.DisplayNameFor(model => model.DAEPolicyDetailViewList.ElementAt(0).DAEInstitute)
                                                        </th>
                                                        <th>
                                                            @Html.DisplayNameFor(model => model.DAEPolicyDetailViewList.ElementAt(0).Year)
                                                        </th>
                                                        <th>
                                                            @Html.DisplayNameFor(model => model.DAEPolicyDetailViewList.ElementAt(0).ClassEnrollment)
                                                        </th>
                                                        <th>
                                                            @Html.DisplayNameFor(model => model.DAEPolicyDetailViewList.ElementAt(0).SlotAllocate)
                                                        </th>
                                                        <th>
                                                            @Html.DisplayNameFor(model => model.DAEPolicyDetailViewList.ElementAt(0).InstituteAdditionalSlot)
                                                        </th>
                                                        <th>
                                                            @Html.DisplayNameFor(model => model.DAEPolicyDetailViewList.ElementAt(0).StipendAmount)
                                                        </th>
                                                        <th>
                                                            @Html.DisplayNameFor(model => model.DAEPolicyDetailViewList.ElementAt(0).Threshold)
                                                        </th>
                                                        @{
                                                            if (!ViewBag.IsEndorse)
                                                            {
                                                                <th>
                                                                    Action
                                                                </th>
                                                            }
                                                        }
                                                    </tr>
                                                </thead>
                                                <tbody class="panel">
                                                    @foreach (var itemInstitute in item.DAEPolicyDetailViewList.Where(a => a.SchemeLevelPolicyId == item.SchemeLevelPolicyId))
                                                    {
                                                        <tr>
                                                            <td style="min-width:400px;text-align:left">
                                                                @Html.DisplayFor(modelItem => itemInstitute.DAEInstituteName)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => itemInstitute.Year)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => itemInstitute.ClassEnrollment)
                                                            </td>
                                                            <td>
                                                                @(Math.Round(itemInstitute.SlotAllocate,3))
                                                            </td>
                                                            <td>
                                                                @(Math.Round(itemInstitute.InstituteAdditionalSlot,3))
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => itemInstitute.StipendAmount)
                                                            </td>
                                                            <td>
                                                                @(Math.Round(itemInstitute.Threshold,3))
                                                            </td>
                                                            @{ 
                                                                if (!ViewBag.IsEndorse)
                                                                {
                                                                    <td>
                                                                        <button type="button" onclick="getDAEId(@itemInstitute.DAEInstituteQoutaBySchemeLevelId, @itemInstitute.InstituteAdditionalSlot, @itemInstitute.DAEInstituteName)" class="btn-sm btn-info waves-effect waves-light" data-toggle="modal" data-target="#ModalDAEPolicy">Update</button>
                                                                    </td>
                                                                }
                                                            }                                                            
                                                        </tr>
                                                    }
                                                </tbody>

                                            </table>
                                        }
                                        else
                                        {
                                            <table class="table table-condensed" id="myTable2" style=" border-spacing: 0; width: 100%;background-color:azure">
                                                <thead>
                                                    <tr style="background-color:lightgray">
                                                        <th>
                                                            @Html.DisplayNameFor(model => model.DegreeSecondLevelList.ElementAt(0).SchemeLevel)
                                                        </th>
                                                        <th>
                                                            <text>Total Degree Levels</text>
                                                        </th>
                                                    </tr>
                                                </thead>
                                                <tbody class="panel" style="font-weight:500">
                                                    @foreach (var degreeLevel in item.DegreeSecondLevelList)
                                                    {
                                                        <tr data-toggle="collapse" data-target=@("#demo2"+innercounter) data-parent="#myTable2" style="cursor:pointer;background-color:oldlace">
                                                            <th>
                                                                @Html.DisplayFor(modelItem => degreeLevel.SchemeLevel)
                                                            </th>
                                                            <th>
                                                                @Html.DisplayFor(modelItem => degreeLevel.DegreeLevel)
                                                            </th>
                                                        </tr>
                                                        <tr id=@("demo2"+(innercounter)) class="collapse">
                                                            <td colspan="2" class="hiddenRow">
                                                                <table class="table table-condensed" style=" border-spacing: 0; width: 100%;">
                                                                    <thead>
                                                                        <tr style="background-color:lightgray;">
                                                                            <th>
                                                                                @Html.DisplayNameFor(innerModel => degreeLevel.DegreeThirdLevelList.ElementAt(0).DegreeScholarshipLevel)
                                                                            </th>
                                                                            <th>
                                                                                @Html.DisplayNameFor(innerModel => degreeLevel.DegreeThirdLevelList.ElementAt(0).ClassEnrollment)
                                                                            </th>
                                                                            <th>
                                                                                @Html.DisplayNameFor(innerModel => degreeLevel.DegreeThirdLevelList.ElementAt(0).SlotAllocate)
                                                                            </th>
                                                                            <th>
                                                                                @Html.DisplayNameFor(innerModel => degreeLevel.DegreeThirdLevelList.ElementAt(0).Threshold)
                                                                            </th>
                                                                            <th>
                                                                                @Html.DisplayNameFor(innerModel => degreeLevel.DegreeThirdLevelList.ElementAt(0).StipendAmount)
                                                                            </th>
                                                                            <th>
                                                                                @Html.DisplayNameFor(innerModel => degreeLevel.DegreeThirdLevelList.ElementAt(0).AdditionalSlotAllocate)
                                                                            </th>                                                                            
                                                                                @{
                                                                                    if (!ViewBag.IsEndorse)
                                                                                    {
                                                                                    <th>
                                                                                        Action
                                                                                    </th>
                                                                                }
                                                                                }                                                                                
                                                                            </tr>
                                                                    </thead>
                                                                    <tbody class="panel">
                                                                        @foreach (var thirdlevel in degreeLevel.DegreeThirdLevelList)
                                                                        {
                                                                        <tr>
                                                                            <td style="text-align: left">
                                                                                @Html.DisplayFor(modelItem => thirdlevel.DegreeScholarshipLevel)
                                                                            </td>
                                                                            <td>
                                                                                @Html.DisplayFor(modelItem => thirdlevel.ClassEnrollment)
                                                                            </td>
                                                                            <td>
                                                                                @(Math.Round(thirdlevel.SlotAllocate,3))
                                                                            </td>
                                                                            <td>
                                                                                @(Math.Round(thirdlevel.Threshold,3))
                                                                            </td>
                                                                            <td>
                                                                                @Html.DisplayFor(modelItem => thirdlevel.StipendAmount)
                                                                            </td>
                                                                            <td>
                                                                                @(Math.Round(thirdlevel.AdditionalSlotAllocate,3))
                                                                            </td>
                                                                            @{
                                                                                if (!ViewBag.IsEndorse)
                                                                                {
                                                                                    <td>
                                                                                        <button type="button" onclick="getDegreeId(@thirdlevel.DegreeLevelQoutaBySchemeLevelId, @thirdlevel.AdditionalSlotAllocate, '@thirdlevel.InstituteName')" class="btn-sm btn-info waves-effect waves-light" data-toggle="modal" data-target="#ModalDegreePolicy">Update</button>
                                                                                    </td>
                                                                                }
                                                                            }

                                                                        </tr>
                                                                        }
                                                                    </tbody>
                                                                </table>
                                                            </td>
                                                        </tr>
                                                        innercounter++;
                                                    }
                                                </tbody>

                                            </table>
                                        }

                                    </td>
                                </tr>
                                counter++;
                            }
                        }                        
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>        

        <div class="col-sm-6 col-md-4 col-xl-3">
            <div class="modal fade" id="ModalDistrictPolicy" tabindex="-1" role="dialog" aria-labelledby="ModalDistrictPolicyTitle" aria-hidden="true">
                <div class="modal-dialog modal-dialog-scrollable">
                    <div class="modal-content">
                        <form asp-action="Edit" enctype="multipart/form-data">
                            <div class="modal-header">
                                <h5 class="modal-title mt-0" id="ModalDistrictPolicyTitle">Update Policy - Additional Slot</h5>
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>
                            <div class="modal-body">

                                <input type="hidden" name="districtSelectedValue" id="districtCurrentId" value="1" />
                                <input type="hidden" name="districtPolicyId" id="districtPolicyId" value="@ViewBag.policyId" />
                                @*<div class="form-group">
                                    <label class="control-label">Population Slot</label>
                                    <input onkeypress="return isNumberKey(event)" class="form-control" name="populationSlot" required readonly="readonly" />
                                </div>
                                <div class="form-group">
                                    <label class="control-label">MPI Slot</label>
                                    <input onkeypress="return isNumberKey(event)" class="form-control" name="MPISlot" required readonly="readonly"/>
                                </div>*@
                                <div class="form-group">
                                    <label class="control-label">Additional Slot</label>
                                    <input onkeypress="return isNumberKey(event)" class="form-control" name="districtAdditionalSlot" required />
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                <button type="submit" class="btn btn-primary">Save changes</button>
                            </div>
                        </form>
                    </div><!-- /.modal-content -->
                </div><!-- /.modal-dialog -->
            </div><!-- /.modal -->
        </div>

        <div class="col-sm-6 col-md-4 col-xl-3">
            <div class="modal fade" id="ModalDAEPolicy" tabindex="-1" role="dialog" aria-labelledby="ModalDAEPolicyTitle" aria-hidden="true">
                <div class="modal-dialog modal-dialog-scrollable">
                    <div class="modal-content">
                        <form asp-controller="DAEInstituteQoutaBySchemeLevels" asp-action="Edit" enctype="multipart/form-data">
                            <div class="modal-header">
                                <h5 class="modal-title mt-0" id="ModalDAEPolicyTitle">Update Policy - Additional Slot</h5>
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>
                            <div class="modal-body">
                                <input type="hidden" name="daeSelectedValue" id="daeCurrentId" value="1" />
                                <input type="hidden" name="daePolicyId" id="daePolicyId" value="@ViewBag.policyId" />
                                <div class="form-group">
                                    <label class="control-label">Additional Slot</label>
                                    <input onkeypress="return isNumberKey(event)" class="form-control" name="daeAdditionalSlot" required />
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                <button type="submit" class="btn btn-primary">Save changes</button>
                            </div>
                        </form>
                    </div><!-- /.modal-content -->
                </div><!-- /.modal-dialog -->
            </div><!-- /.modal -->
        </div>

        <div class="col-sm-6 col-md-4 col-xl-3">
            <div class="modal fade" id="ModalDegreePolicy" tabindex="-1" role="dialog" aria-labelledby="ModalDegreePolicyTitle" aria-hidden="true">
                <div class="modal-dialog modal-dialog-scrollable">
                    <div class="modal-content">
                        <form asp-controller="DegreeLevelQoutaBySchemeLevels" asp-action="Edit" enctype="multipart/form-data">
                            <div class="modal-header">
                                <h5 class="modal-title mt-0" id="ModalDegreePolicyTitle">Update Policy - Additional Slot</h5>
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>
                            <div class="modal-body">
                                <input type="hidden" name="degreeSelectedValue" id="degreeCurrentId" value="1" />
                                <input type="hidden" name="degreePolicyId" id="degreePolicyId" value="@ViewBag.policyId" />
                                <div class="form-group">
                                    <label class="control-label">Additional Slot</label>
                                    <input onkeypress="return isNumberKey(event)" class="form-control" name="degreeAdditionalSlot" required />
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                <button type="submit" class="btn btn-primary">Save changes</button>
                            </div>
                        </form>
                    </div><!-- /.modal-content -->
                </div><!-- /.modal-dialog -->
            </div><!-- /.modal -->
        </div>

        <!-- JAVASCRIPT -->
        <script src="~/assets/libs/jquery/jquery.min.js"></script>
        <script type="text/javascript">
    var clickId;
    function getDistrictId(clicked_id, @*popSlot, mpiSlot,*@ addSlot, title) {
        this.clickId = clicked_id;
        $("input[name='districtSelectedValue']").val(clicked_id);
        @*$("input[name='populationSlot']").val(popSlot);
        $("input[name='MPISlot']").val(mpiSlot);*@
        $("input[name='districtAdditionalSlot']").val(addSlot);
        alert(addSlot);
        $("#ModalDistrictPolicyTitle").text("Update Policy - " + title + " Additional Slot");
        alert(clicked_id);
    }
    function getDAEId(clicked_id, addSlot, title) {
        this.clickId = clicked_id;
        $("input[name='daeSelectedValue']").val(clicked_id);
        $("input[name='daeAdditionalSlot']").val(addSlot);
        $("#ModalDAEPolicyTitle").text("Update Policy - " + title + " Additional Slot");
        alert(clicked_id);
    }
    function getDegreeId(clicked_id, addSlot, title) {        
        this.clickId = clicked_id;
        $("input[name='degreeSelectedValue']").val(clicked_id);
        $("input[name='degreeAdditionalSlot']").val(addSlot);
        $("#ModalDegreePolicyTitle").text("Update Policy - " + title);
        alert(clicked_id);
    }
    function isNumberKey(evt) {
        debugger;
        var charCode = (evt.which) ? evt.which : event.keyCode;
        if (charCode == 46 && evt.srcElement.value.split('.').length > 1) {
            return false;
        }
        if (charCode != 46 && charCode > 31 && (charCode < 48 || charCode > 57))
            return false;
        return true;
    }
        </script>





