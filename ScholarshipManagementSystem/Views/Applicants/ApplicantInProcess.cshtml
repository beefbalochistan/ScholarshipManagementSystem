@model IEnumerable<DAL.Models.ViewModels.ApplicantInProcess.SPApplicantInProcessSummary>
@using ScholarshipManagementSystem.Models;
@{
    ViewBag.pTitle = ViewBag.Title;
    ViewBag.pageTitle = "Applicant";
    Layout = "~/Views/_Shared/_Layout.cshtml";
}
@{
    List<UserViewModel> users = ViewBag.UserList;
    var usersTextArray = users.Select(a=>a.UserName).ToArray<string>();
    var usersValueArray = users.Select(a => a.UserId).ToArray<string>();    
    List<TrancheViewModel> tranches = ViewBag.TrancheList;
    var tranchesTextArray = tranches.Select(a => a.TrancheName).ToArray<string>();
    var tranchesValueArray = tranches.Select(a => a.TrancheId).ToArray<int>();
    
}
<link href="~/assets/libs/summernote/summernote-bs4.min.css" rel="stylesheet" type="text/css" />
<link rel="stylesheet" type="text/css" href="~/assets/libs/toastr/build/toastr.min.css">
<link href="~/assets/libs/sweetalert2/sweetalert2.min.css" rel="stylesheet" type="text/css" />
<div class="row">
    <div class="col-xl-9 col-lg-8 p-0">
        <div class="card">
            <div id="fetchspinner" style="display:none" class="spinner-grow text-dark m-2 mb-3" role="status">
                <span class="sr-only">Loading...</span>
            </div>
            <div id="ApplicantDataPlace">
            </div>
        </div>
    </div>

    <div class="col-xl-3 col-lg-4">
        <div class="card">
            <div class="card-body p-4">
                @*<div class="search-box">
                        <p class="text-muted">Search</p>
                        <div class="position-relative">
                            <input type="text" class="form-control rounded bg-light border-light" placeholder="Search...">
                            <i class="mdi mdi-magnify search-icon"></i>
                        </div>
                    </div>*@
                <div class="title"> List of Scheme</div>
                <hr class="my-4">

                <div>
                    <p class="text-muted">List of In Process Applicant Cases</p>

                    <ul class="list-unstyled font-weight-medium">
                        @*<li><a href="#" class="text-muted py-2 d-block"><i class="mdi mdi-chevron-right mr-1"></i> Design</a></li>*@
                        @foreach (var item in Model)
                        {
                            <li>
                                <a href="#" onclick=UpdateRecord(@(item.Applicant !=0 ? item.SchemeLevelId : 0)) class="text-muted py-2 d-block">
                                    <i class="mdi mdi-projector-screen mr-1"></i>
                                    @item.SchemeLevel
                                    <span class="badge badge-soft-success badge-pill float-right ml-1 font-size-12">@item.Applicant.ToString().PadLeft(2, '0')</span>
                                </a>
                            </li>
                        }                       
                    </ul>
                </div>
              
            </div>
        </div>
        <!-- end card -->
    </div>
</div>


@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <!-- toastr plugin -->
    <script src="~/assets/libs/toastr/build/toastr.min.js"></script>
    <!-- Sweet Alerts js -->
    <script src="~/assets/libs/sweetalert2/sweetalert2.min.js"></script>

    <script>
        $(document).ready(function () {
            var SchemeLevelId = '@ViewBag.SchemeLevelId';
            var inbox = '@ViewBag.Inbox';
            fetchRecord(SchemeLevelId, inbox);
    })
        function fetchRecord(SchemeLevelId, inbox) {
            var MaxFYId = '@ViewBag.MaxFYId';
            var applicantCurrentStatusId = '@ViewBag.applicantCurrentStatusId';
            $("#fetchspinner").show();
            $.ajax({
                url: '@Url.Action("GetResultList", "Applicants")',
                data: {
                    MaxFYId: MaxFYId,
                    applicantCurrentStatusId: applicantCurrentStatusId,
                    SchemeLevelId: SchemeLevelId,
                    Inbox: inbox
                },
                success: function (data) {
                    $("#ApplicantDataPlace").html(data);
                    notificationme('Fetch Record Successfully!');
                    $("#fetchspinner").hide();
                }
            });
        }
        function UpdateRecord(SchemeLevelId) {
            if (SchemeLevelId != 0) {
                var inbox = '@ViewBag.Inbox';
                fetchRecord(SchemeLevelId, inbox);
            } else {
                notificationme('No Record Found!');
            }
        }
        function notificationme(message) {
            toastr.options = {
                "closeButton": false,
                "debug": false,
                "newestOnTop": false,
                "progressBar": true,
                "preventDuplicates": true,
                "onclick": null,
                "showDuration": "100",
                "positionClass": "toast-bottom-right",
                "hideDuration": "1000",
                "timeOut": "5000",
                "extendedTimeOut": "1000",
                "showEasing": "swing",
                "hideEasing": "linear",
                "showMethod": "show",
                "hideMethod": "hide"
            };
            toastr.info(message);
        }


        function MoveToPend(applicantId, schemeLevelId) {
            Swal.fire({
                title: "Are you sure?",
                text: 'You Want to Send Applicant File in "Pending Cases!"',
                type: "warning",
                showCancelButton: !0, confirmButtonColor: "#34c38f",
                cancelButtonColor: "#f46a6a",
                confirmButtonText: "Yes, Send it!"
            }).then(function (t) {
                if (t.value == true) {
                    $.ajax({
                        type: "POST",
                        url: "/Applicants/SendPend",
                        data: { applicantId: applicantId },
                        dataType: "json",
                        success: function (response) {
                            if (response != null) {
                                if (response.isValid) {
                                    Swal.fire("Back", response.message, "success");
                                    UpdateRecord(schemeLevelId);
                                } else {
                                    notificationme(response.message);
                                }
                            }
                        },
                        failure: function (response) {
                            alert(response.responseText);
                        },
                        error: function (response) {
                            alert(response.responseText);
                        }
                    });
                }
            })
        }
        function ForwardToIA(applicantId, schemeLevelId) {
            var Description = "";
            Swal.fire({
                title: "Are you sure?",                
                html: "<h6>You Want to Send Applicant File in 'Internal Audit Inbox!'</h6><div class='text-center'><label>Description</label><div class='text-center'><textarea id='description' class='form-control' rows='2'></textarea></div>",
                type: "warning",
                showCancelButton: !0, confirmButtonColor: "#34c38f",
                cancelButtonColor: "#f46a6a",
                confirmButtonText: "Yes, Send it!",
                preConfirm: () => {                 
                    Description = document.getElementById('description').value;
                    if (Description == "") {
                        Swal.showValidationMessage(
                            `Invalid Decription!`
                        )
                    }
                }
            }).then(function (t) {
                if (t.value == true) {
                    $.ajax({
                        type: "POST",
                        url: "/Applicants/SendIA",
                        data: { applicantId: applicantId, description: Description },
                        dataType: "json",
                        success: function (response) {
                            if (response != null) {
                                if (response.isValid) {
                                    Swal.fire("Back", response.message, "success");
                                    UpdateRecord(schemeLevelId);
                                } else {
                                    notificationme(response.message);
                                }
                            }
                        },
                        failure: function (response) {
                            alert(response.responseText);
                        },
                        error: function (response) {
                            alert(response.responseText);
                        }
                    });
                }
            })
        }
        function MoveToPrimary(applicantId, schemeLevelId) {
            Swal.fire({
                title: "Are you sure?",
                text: 'You Want to Resume Applicant File in "Primary Cases"',
                type: "success",
                showCancelButton: !0, confirmButtonColor: "#34c38f",
                cancelButtonColor: "#f46a6a",
                confirmButtonText: "Yes, Resume it!"
            }).then(function (t) {
                if (t.value == true) {
                    $.ajax({
                        type: "POST",
                        url: "/Applicants/SendPrimary",
                        data: { applicantId: applicantId },
                        dataType: "json",
                        success: function (response) {
                            if (response != null) {
                                if (response.isValid) {
                                    Swal.fire("Back", response.message, "success");
                                    UpdateRecord(schemeLevelId);
                                } else {
                                    notificationme(response.message);
                                }
                            }
                        },
                        failure: function (response) {
                            alert(response.responseText);
                        },
                        error: function (response) {
                            alert(response.responseText);
                        }
                    });
                }
            })
        }
        function MoveToISRC(applicantId, schemeLevelId) {
            var Description = "";
            Swal.fire({
                title: "Are you sure?",                
                html: "<h6>You Want to Send Applicant File in 'ISRC Forum'</h6><div class='text-center'><label>Description</label><div class='text-center'><textarea id='description' class='form-control' rows='2'></textarea></div>",
                type: "success",
                showCancelButton: !0, confirmButtonColor: "#34c38f",
                cancelButtonColor: "#f46a6a",
                confirmButtonText: "Yes, Send it!",
                preConfirm: () => {                 
                    Description = document.getElementById('description').value;
                    if (Description == "") {
                        Swal.showValidationMessage(
                            `Invalid Decription!`
                        )
                    }
                }
            }).then(function (t) {
                if (t.value == true) {
                    $.ajax({
                        type: "POST",
                        url: "/Applicants/SendISRC",
                        data: { applicantId: applicantId, description: Description },
                        dataType: "json",
                        success: function (response) {
                            if (response != null) {
                                if (response.isValid) {
                                    Swal.fire("Back", response.message, "success");
                                    UpdateRecord(schemeLevelId);
                                } else {
                                    notificationme(response.message);
                                }
                            }
                        },
                        failure: function (response) {
                            alert(response.responseText);
                        },
                        error: function (response) {
                            alert(response.responseText);
                        }
                    });
                }
            })
        }
        function RejectCase(applicantId, schemeLevelId) {
            var Description = '@ViewBag.DefaultRejectComments';
            Swal.fire({
                title: "Are you sure?",
                html: "<h6>You Want to Reject Applicant Case</h6><div class='text-center'><label class='control-label'>Description</label><div class='text-center'><textarea id='description' class='form-control' rows='2'>" + Description +"</textarea></div>",
                type: "success",
                showCancelButton: !0, confirmButtonColor: "#34c38f",
                cancelButtonColor: "#f46a6a",
                confirmButtonText: "Yes, Reject Case!",
                preConfirm: () => {
                    Description = document.getElementById('description').value;
                    if (Description == "") {
                        Swal.showValidationMessage(
                            `Invalid Decription!`
                        )
                    }
                }
            }).then(function (t) {
                if (t.value == true) {
                    $.ajax({
                        type: "POST",
                        url: "/Applicants/RejectApplicantByIA",
                        data: { applicantId: applicantId, Description: Description },
                        dataType: "json",
                        success: function (response) {
                            if (response != null) {
                                if (response.isValid) {
                                    Swal.fire("Back", response.message, "success");
                                    UpdateRecord(schemeLevelId);
                                } else {
                                    notificationme(response.message);
                                }
                            }
                        },
                        failure: function (response) {
                            alert(response.responseText);
                        },
                        error: function (response) {
                            alert(response.responseText);
                        }
                    });
                }
            })
        }

        function ForwardCase(applicantId, schemeLevelId) {
            // Get server side variables
            var usersTextArray = []; // it will contain user names
            var usersValueArray = []; // it will contain user Ids
            @foreach (var text in usersTextArray)
            {
                @:usersTextArray.push("@text");
            }
            @foreach (var value in usersValueArray)
            {
                @:usersValueArray.push("@value");
            }
            // Create string for select options
            var options = "";
            for (let i = 0; i < usersValueArray.length; ++i) {
                var optionTag = "<option value=\"" + usersValueArray[i] + "\">" + usersTextArray[i] + "</option>";
                options = options.concat(optionTag);
            }
            var UserId = "";
            Swal.fire({
                title: "Are you sure?",
                //text: 'You Want to Forward Applicant With Default Comments',
                html: "<h6>You Want to Forward Applicant With Default Comments</h6><div class='text-center'> <select id='UserListId' name='UserListId' class='form-control'>" + options + "</select></div>",
                type: "success",
                showCancelButton: !0, confirmButtonColor: "#34c38f",
                cancelButtonColor: "#f46a6a",
                confirmButtonText: "Yes, Forward it!",
                preConfirm: () => {
                    UserId = document.getElementById('UserListId').value;
                    if (UserId == "") {
                        Swal.showValidationMessage(
                            `Invalid User to forward!`
                        )
                    }
                }
            }).then(function (t) {
                if (t.value == true) {
                    $.ajax({
                        type: "POST",
                        url: "/Applicants/ForwardCase",
                        data: { applicantId: applicantId, UserId: UserId },
                        dataType: "json",
                        success: function (response) {
                            if (response != null) {
                                if (response.isValid) {
                                    Swal.fire("Back", response.message, "success");
                                    UpdateRecord(schemeLevelId);
                                } else {
                                    notificationme(response.message);
                                }
                            }
                        },
                        failure: function (response) {
                            alert(response.responseText);
                        },
                        error: function (response) {
                            alert(response.responseText);
                        }
                    });
                }
            })
        }

        function ForwardCaseByFinance(applicantId, schemeLevelId) {
            // Get server side variables
            var usersTextArray = []; // it will contain user names
            var usersValueArray = []; // it will contain user Ids
            var tranchesTextArray = []; // it will contain user names
            var tranchesValueArray = []; // it will contain user Ids
            @foreach (var text in usersTextArray)
            {
                @:usersTextArray.push("@text");
            }
            @foreach (var value in usersValueArray)
            {
                @:usersValueArray.push("@value");
            }
            // Create string for select options
            var options = "";
            for (let i = 0; i < usersValueArray.length; ++i) {
                var optionTag = "<option value=\"" + usersValueArray[i] + "\">" + usersTextArray[i] + "</option>";
                options = options.concat(optionTag);
            }
            //--------------------------------
             @foreach (var text in tranchesTextArray)
            {
                @:tranchesTextArray.push("@text");
            }
            @foreach (var value in tranchesValueArray)
            {
                @:tranchesValueArray.push("@value");
            }
            var options2 = "";
            var PMId = '@ViewBag.DefaultPaymentMethodId';
            var index = -1;
            for (let i = 0; i < tranchesValueArray.length; ++i) {
                if (PMId == tranchesValueArray[i]) {
                    index = tranchesValueArray[i];
                }
                var optionTag2 = "<option value=\"" + tranchesValueArray[i] + "\">" + tranchesTextArray[i] + "</option>";
                options2 = options2.concat(optionTag2);
            }
            if (index >= 0) {
                var str = "value=\"" + index;
                var str2 = " selected value=\"" + index;
                options2 = options2.replace(str, str2);
            }
            //alert(options2)
            //--------------------------------
            var UserId = "";
            var TrancheId = 0;
            Swal.fire({
                title: "Are you sure?",
                //text: 'You Want to Forward Applicant With Default Comments',
                html: "<h6>You Want to Forward Applicant With Default Comments</h6><div class='text-center'> <select id='UserListId' name='UserListId' class='form-control'>" + options + "</select></div><div class='text-center'> <select id='TrancheListId' name='TrancheListId' class='form-control'>" + options2 + "</select></div>",
                type: "success",
                showCancelButton: !0, confirmButtonColor: "#34c38f",
                cancelButtonColor: "#f46a6a",
                confirmButtonText: "Yes, Forward it!",
                preConfirm: () => {
                    UserId = document.getElementById('UserListId').value;
                    if (UserId == "") {
                        Swal.showValidationMessage(
                            `Invalid User to forward!`
                        )
                    }
                    TrancheId = document.getElementById('TrancheListId').value;
                    if (TrancheId == 0) {
                        Swal.showValidationMessage(
                            `Invalid Tranche!`
                        )
                    }
                }
            }).then(function (t) {
                if (t.value == true) {
                    $.ajax({
                        type: "POST",
                        url: "/Applicants/ForwardCaseByFinance",
                        data: { applicantId: applicantId, UserId: UserId, TrancheId: TrancheId },
                        dataType: "json",
                        success: function (response) {
                            if (response != null) {
                                if (response.isValid) {
                                    Swal.fire("Back", response.message, "success");
                                    UpdateRecord(schemeLevelId);
                                } else {
                                    notificationme(response.message);
                                }
                            }
                        },
                        failure: function (response) {
                            alert(response.responseText);
                        },
                        error: function (response) {
                            alert(response.responseText);
                        }
                    });
                }
            })
        }

        function ForwardWithFinding(applicantId, schemeLevelId) {
            // Get server side variables
            var usersTextArray = []; // it will contain user names
            var usersValueArray = []; // it will contain user Ids
            var tranchesTextArray = []; // it will contain user names
            var tranchesValueArray = []; // it will contain user Ids
            @foreach (var text in usersTextArray)
            {
                @:usersTextArray.push("@text");
            }
            @foreach (var value in usersValueArray)
            {
                @:usersValueArray.push("@value");
            }
            // Create string for select options
            var options = "";
            for (let i = 0; i < usersValueArray.length; ++i) {
                var optionTag = "<option value=\"" + usersValueArray[i] + "\">" + usersTextArray[i] + "</option>";
                options = options.concat(optionTag);
            }
            //--------------------------------
             @foreach (var text in tranchesTextArray)
            {
                @:tranchesTextArray.push("@text");
            }
            @foreach (var value in tranchesValueArray)
            {
                @:tranchesValueArray.push("@value");
            }
            var options2 = "";
            var PMId = '@ViewBag.DefaultPaymentMethodId';
            var index = -1;
            for (let i = 0; i < tranchesValueArray.length; ++i) {
                if (PMId == tranchesValueArray[i]) {
                    index = tranchesValueArray[i];
                }
                var optionTag2 = "<option value=\"" + tranchesValueArray[i] + "\">" + tranchesTextArray[i] + "</option>";
                options2 = options2.concat(optionTag2);
            }
            if (index >= 0) {
                var str = "value=\"" + index;
                var str2 = " selected value=\"" + index;
                options2 = options2.replace(str, str2);
            }
            //alert(options2)
            //--------------------------------
            var UserId = "";
            var Description = "";
            var TrancheId = 0;
            Swal.fire({
                title: "Are you sure?",
                //text: 'You Want to Forward Applicant With Default Comments',
                html: "<h6>You Want to Forward Applicant With Default Comments</h6><div class='text-center'> <select id='UserListId' name='UserListId' class='form-control'>" + options + "</select></div><div class='text-center'> <select id='TrancheListId' name='TrancheListId' class='form-control'>" + options2 + "</select><label>Description</label><div class='text-center'><textarea id='description' class='form-control' rows='2'></textarea></div>",
                type: "success",
                showCancelButton: !0, confirmButtonColor: "#34c38f",
                cancelButtonColor: "#f46a6a",
                confirmButtonText: "Yes, Forward it!",
                preConfirm: () => {
                    UserId = document.getElementById('UserListId').value;
                    if (UserId == "") {
                        Swal.showValidationMessage(
                            `Invalid User to forward!`
                        )
                    }
                    TrancheId = document.getElementById('TrancheListId').value;
                    if (TrancheId == 0) {
                        Swal.showValidationMessage(
                            `Invalid Tranche!`
                        )
                    }
                    Description = document.getElementById('description').value;
                    if (Description == "") {
                        Swal.showValidationMessage(
                            `Invalid Decription!`
                        )
                    }
                }
            }).then(function (t) {
                if (t.value == true) {
                    $.ajax({
                        type: "POST",
                        url: "/Applicants/ForwardWithFinding",
                        data: { applicantId: applicantId, UserId: UserId, TrancheId: TrancheId, Description: Description },
                        dataType: "json",
                        success: function (response) {
                            if (response != null) {
                                if (response.isValid) {
                                    Swal.fire("Back", response.message, "success");
                                    UpdateRecord(schemeLevelId);
                                } else {
                                    notificationme(response.message);
                                }
                            }
                        },
                        failure: function (response) {
                            alert(response.responseText);
                        },
                        error: function (response) {
                            alert(response.responseText);
                        }
                    });
                }
            })
        }       
        function ResumeCase(applicantId, schemeLevelId) {
            var Description = "";
            Swal.fire({
                title: "Are you sure?",                
                html: "<h6>You Want to Resume Applicant File</h6><div class='text-center'><label>Description</label><div class='text-center'><textarea id='description' class='form-control' rows='2'></textarea></div>",
                type: "warning",
                showCancelButton: !0, confirmButtonColor: "#34c38f",
                cancelButtonColor: "#f46a6a",
                confirmButtonText: "Yes, Send it!",
                preConfirm: () => {                 
                    Description = document.getElementById('description').value;
                    if (Description == "") {
                        Swal.showValidationMessage(
                            `Invalid Decription!`
                        )
                    }
                }
            }).then(function (t) {
                if (t.value == true) {
                    $.ajax({
                        type: "POST",
                        url: "/Applicants/ResumeCase",
                        data: { applicantId: applicantId, description: Description },
                        dataType: "json",
                        success: function (response) {
                            if (response != null) {
                                if (response.isValid) {
                                    Swal.fire("Back", response.message, "success");
                                    UpdateRecord(schemeLevelId);
                                } else {
                                    notificationme(response.message);
                                }
                            }
                        },
                        failure: function (response) {
                            alert(response.responseText);
                        },
                        error: function (response) {
                            alert(response.responseText);
                        }
                    });
                }
            })
        }
    </script>
}